<div class="page-header">
  <h1>
    Insurers
    <a href="/insurers/new" class="btn btn-lg btn-success"><i class="fa fa-plus"></i></a>
  </h1>
    <p>This displays all health insurance plans on healthcare.gov for each insurer. Users can edit / add insurers; but cannot delete existing insurers.</p>
</div>

<div class="row">
<%= search_form_for @q do |f| %>
  <p class="lead">Narrow results by field:</p>

  <div class="form-group col-sm-4 col-sm-offset-4">
    <%= f.label :insurer_cont, " Select Insurer:" %>
    <%= f.text_field :insurer_cont, :class => "form-control", :placeholder => "i.e. United" %>
  </div>

  <%= f.submit :class => "btn btn-primary col-sm-4 col-sm-offset-4" %>

  <a href="/insurers" class="btn btn-default col-sm-4 col-sm-offset-4">Clear filters</a>
<% end %>
</div>

<hr>

<div class="row">
<%= paginate @insurers %>
</div>

<br>

<div class="row isotope-container col-sm-8 col-sm-offset-2">
<table class="table table-striped table-hover">
  <thead>
    <tr>

    <th>
      <%= content_tag :table do %>
        <%= content_tag :th, sort_link(@q, :insurer) %>
      <% end %>
    </th>

    <th>Number of Plans Offered by Insurer:</th>
    <th></th>
    <th></th>
    </tr>
  </thead>

  <tbody>

    <% @insurers.each do |insurer| %>
    <tr>
      <td> <%= insurer.insurer %></td>
      <td> <%= insurer.plans.count %></td>
      <td>
        <a href="insurers/<%= insurer.id %>" class="btn btn_primary">
          <i class="fa fa-search-plus"></i>
        </a>
      </td>
      <td>
        <a href="insurers/<%= insurer.id %>/edit" class="btn btn-warning">
          <i class="fa fa-edit"></i>
        </a>
      </td>
    </tr>
    <% end %>
  </tbody>
</table>
</div>


<!-- Responsive, Isotope-based layout example

<div class="row">
  <div class="col-xs-12">
    <input type="text" id="quicksearch" placeholder="Search Insurers (start typing)" class="form-control">
  </div>
</div>

<hr>


<%= paginate @insurers %>

<div class="row isotope-container">
<% @insurers.each do |insurer| %>
  <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 isotope-item">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h3 class="panel-title">Insurer #<%= insurer.id %></h3>
      </div>
      <div class="panel-body">
        <dl>
          <dt>Insurer</dt>
          <dd><%= insurer.insurer %></dd>

        </dl>
        <div class="btn-group btn-group-justified">
          <a href="/insurers/<%= insurer.id %>" class="btn btn-primary">
            <i class="fa fa-search-plus"></i>
          </a>

          <a href="/insurers/<%= insurer.id %>/edit" class="btn btn-warning">
            <i class="fa fa-edit"></i>
          </a>

          <a href="/delete_insurer/<%= insurer.id %>" class="btn btn-danger" rel="nofollow">
            <i class="fa fa-trash-o"></i>
          </a>
        </div>
      </div>
    </div>
  </div>
<% end %>
</div>

-->

<!-- You can ignore the following. It's a quick and dirty example of how to get a Pinterest-style layout with quick search. -->
<!-- JavaScript for Isotope layout and quicksearch -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.1.8/imagesloaded.pkgd.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.0.0/isotope.pkgd.min.js"></script>
<script>
  $(function() {
    // quick search regex
    var qsRegex;

    // init Isotope
    var $container = $('.isotope-container');

    $container.imagesLoaded(function() {
      $container.isotope({
        itemSelector: '.isotope-item',
        layoutMode: 'masonry',
        filter: function() {
          return qsRegex ? $(this).text().match( qsRegex ) : true;
        }
      })
    });

    // use value of search field to filter
    var $quicksearch = $('#quicksearch').keyup( debounce( function() {
      qsRegex = new RegExp( $quicksearch.val(), 'gi' );
      $container.isotope();
    }, 200 ) );

  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>

<!-- End responsive, Isotope-based layout example -->
